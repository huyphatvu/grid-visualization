{"version":3,"sources":["components/Header/components/MenuButton/MenuButton.js","components/Header/components/Arrow/Arrow.js","components/Header/Header.js","components/DemoBox/components/GridBox/GridBox.js","components/DemoBox/components/GridScript/GridScript.js","components/DemoBox/DemoBox.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["MenuButton","e","preventDefault","console","log","currentTarget","classList","toggle","document","getElementsByClassName","item","react_default","a","createElement","className","onClick","this","handleClick","Component","Arrow","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getArrow","bind","assertThisInitialized","isToggleOn","Header","state","showList","handleHoverEvent","handleMouseLeave","setState","element","onMouseLeave","Link","to","children","components_MenuButton_MenuButton","href","onMouseEnter","components_Arrow_Arrow","GridBox","class","DemoBox","GridScript","components_GridBox_GridBox","Footer","App","HashRouter","style","AppStyle","components_Header_Header","components_DemoBox_DemoBox","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iQAwBeA,sLArBDC,GACVA,EAAEC,iBACFC,QAAQC,IAAIH,EAAEI,eACdJ,EAAEI,cAAcC,UAAUC,OAAO,UACpBC,SAASC,uBAAuB,kBAAkBC,KAAK,GAC5DJ,UAAUC,OAAO,+CAIzB,OACII,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBC,QAASC,KAAKC,aACjDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAfFI,aCiBVC,cAhBb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAG,IAChBE,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAAV,KAAMI,KACDO,SAAWN,EAAKM,SAASC,KAAdN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAFAA,0EAMhB,OAAIL,KAAKI,MAAMU,WAGJnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sCAFbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uDAKxB,OAAOE,KAAKW,kBAbIT,aCsFLa,cAlFb,SAAAA,EAAYX,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAe,IAChBV,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAS,GAAAL,KAAAV,KAAMI,KACDY,MAAO,CACVF,YAAY,EACZG,UAAU,GAEZZ,EAAKa,iBAAmBb,EAAKa,iBAAiBN,KAAtBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACxBA,EAAKY,SAAWZ,EAAKY,SAASL,KAAdN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAChBA,EAAKJ,YAAcI,EAAKJ,YAAYW,KAAjBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACnBA,EAAKc,iBAAmBd,EAAKc,iBAAiBP,KAAtBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KATRA,kFAchBL,KAAKoB,SAAS,CACZN,YAAY,EACZG,UAAU,0CAKTjB,KAAKgB,MAAMC,SACZjB,KAAKoB,SAAS,CACZN,YAAY,EACZG,UAAU,IAGZjB,KAAKoB,SAAS,CACZN,YAAY,EACZG,UAAU,+CAMdjB,KAAKoB,SAAS,CACZN,YAAY,EACZG,UAAU,uCAKZ,GAAGjB,KAAKgB,MAAMC,SAAS,CACrB,IAAII,EACF1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDAAoDwB,aAActB,KAAKmB,kBACpFxB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMzB,UAAU,WAAW0B,GAAG,UAA9B,uBACA7B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMzB,UAAU,WAAW0B,GAAG,KAA9B,kBACA7B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMzB,UAAU,WAAW0B,GAAG,KAA9B,kBACA7B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMzB,UAAU,WAAW0B,GAAG,KAA9B,eAIJ,OADErC,QAAQC,IAAIiC,EAAQjB,MAAMqB,UACrBJ,oCAOT,OACQ1B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACZH,EAAAC,EAAAC,cAAC6B,EAAD,MACA/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQ8B,KAAK,KAAb,cACJhC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAW8B,aAAc5B,KAAKkB,iBAAkBnB,QAASC,KAAKC,aAAhF,SAEIN,EAAAC,EAAAC,cAACgC,EAAD,CAAOf,WAAYd,KAAKgB,MAAMF,cAEjCd,KAAKiB,aAGZtB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQ8B,KAAK,KAAb,mBACJhC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQ8B,KAAK,KAAb,8BA3ECzB,aCuBN4B,mLAxBX,OAEEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,qBACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKkC,MAAM,aAAX,KACApC,EAAAC,EAAAC,cAAA,OAAKkC,MAAM,aAAX,KACApC,EAAAC,EAAAC,cAAA,OAAKkC,MAAM,aAAX,KACApC,EAAAC,EAAAC,cAAA,OAAKkC,MAAM,aAAX,KACApC,EAAAC,EAAAC,cAAA,OAAKkC,MAAM,aAAX,KACApC,EAAAC,EAAAC,cAAA,OAAKkC,MAAM,aAAX,KACApC,EAAAC,EAAAC,cAAA,OAAKkC,MAAM,aAAX,KACApC,EAAAC,EAAAC,cAAA,OAAKkC,MAAM,aAAX,KACApC,EAAAC,EAAAC,cAAA,OAAKkC,MAAM,aAAX,gBAhBQ7B,aCkBP4B,mLAhBX,OAEInC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZH,EAAAC,EAAAC,cAAA,sEALWK,aCeP8B,mLAZX,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACqC,EAAD,eAPYhC,aCOLiC,MARV,WACL,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,2ECwBSuC,mLAhBX,OACEzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,KACE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMiC,MAAM,OAAOO,MAAUC,KAC1C5C,EAAAC,EAAAC,cAAC2C,EAAD,MACA7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAC4C,EAAD,MACA9C,EAAAC,EAAAC,cAAC4C,EAAD,MACA9C,EAAAC,EAAAC,cAAC4C,EAAD,OAEJ9C,EAAAC,EAAAC,cAAC6C,EAAD,eAZQxC,aCAEyC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAAS1D,SAAS2D,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f02abfc9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass MenuButton extends Component{\n  handleClick(e){\n    e.preventDefault();\n    console.log(e.currentTarget);\n    e.currentTarget.classList.toggle(\"change\");\n    var top_nav= document.getElementsByClassName(\"topnav-content\").item(0);\n    top_nav.classList.toggle(\"nav-appear\");\n  }\n\n  render() {\n    return(\n        <li className=\"top-button unclick\">\n          <div className=\"menu-button unclick\" onClick={this.handleClick}>\n            <div className=\"bar1 unclick\"></div>\n            <div className=\"bar2 unclick\"></div>\n            <div className=\"bar3 unclick\"></div>\n          </div>\n        </li>\n    );\n  }\n}\n\nexport default MenuButton;\n","import React, {Component} from \"react\";\n\nclass Arrow extends Component{\n  constructor(props){\n    super(props);\n    this.getArrow = this.getArrow.bind(this);\n  }\n\n  getArrow (){\n    if(!this.props.isToggleOn){\n        return <i className=\"arrow point-right\"></i>; }\n    else {\n        return <i className=\"arrow point-right arrow-turn-down\"></i>  }\n  }\n  render(){\n    return this.getArrow();\n  }\n}\n\nexport default Arrow;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuButton from \"./components/MenuButton/MenuButton\";\nimport Arrow from \"./components/Arrow/Arrow\";\n\nclass Header extends Component{\n  constructor(props){\n    super(props);\n    this.state ={\n      isToggleOn: false,\n      showList: false\n    }\n    this.handleHoverEvent = this.handleHoverEvent.bind(this);\n    this.showList = this.showList.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n  }\n\n  handleHoverEvent(){\n    // console.log(e);\n    this.setState({\n      isToggleOn: true,\n      showList: true\n    });\n  }\n\n  handleClick(){\n    if(this.state.showList){\n      this.setState({\n        isToggleOn: false,\n        showList: false\n      });\n    } else{\n      this.setState({\n        isToggleOn: true,\n        showList: true\n      });\n    }\n  }\n\n  handleMouseLeave(){\n    this.setState({\n      isToggleOn: false,\n      showList: false\n    });\n  }\n\n  showList(){\n    if(this.state.showList){\n      let element = (\n        <div className=\"dropdown-content dropdown-block-appear-transition\" onMouseLeave={this.handleMouseLeave}>\n          <Link className=\"nav-link\" to=\"/hello\">   flex-direction  </Link>\n          <Link className=\"nav-link\" to=\"/\">   flex-wrap  </Link>\n          <Link className=\"nav-link\" to=\"/\">   flex-flow  </Link>\n          <Link className=\"nav-link\" to=\"/\">   order  </Link>\n        </div>\n      );\n        console.log(element.props.children);\n      return element;\n    }\n  }\n\n\n\n  render() {\n    return (\n            <ul className=\"topnav\">\n              <MenuButton />\n              <div className=\"topnav-content\">\n                <li><button href=\"/\">   Home  </button></li>\n                <li>\n                    <div className=\"dropdown\">\n                      <button className=\"dropbtn \" onMouseEnter={this.handleHoverEvent} onClick={this.handleClick}>\n                          Models\n                          <Arrow isToggleOn={this.state.isToggleOn}/>\n                      </button>\n                      {this.showList()}\n                    </div>\n                </li>\n                <li><button href=\"/\">   Alignment  </button></li>\n                <li><button href=\"/\">   Flexibility  </button></li>\n              </div>\n            </ul>\n    );\n  }\n}\n\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass GridBox extends Component {\n  render(){\n    return(\n\n      <div className=\"grid-block-outer\">\n        <div className=\"grid-block-inner\">\n          <p>Some Text\n            <div className=\"grid-container\">\n              <div class=\"grid-item\">1</div>\n              <div class=\"grid-item\">2</div>\n              <div class=\"grid-item\">3</div>\n              <div class=\"grid-item\">4</div>\n              <div class=\"grid-item\">5</div>\n              <div class=\"grid-item\">6</div>\n              <div class=\"grid-item\">7</div>\n              <div class=\"grid-item\">8</div>\n              <div class=\"grid-item\">9</div>\n            </div>\n          </p>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default GridBox;\n","import React, { Component } from 'react';\n\nclass GridBox extends Component {\n  render(){\n    return(\n\n        <div className=\"script-block\">\n           <pre>{\n`\n.grid-container {\n  display: grid-inline;\n}`\n          }\n          </pre>\n        </div>\n\n    );\n  }\n}\n\nexport default GridBox;\n","import React, { Component } from 'react';\nimport GridBox from './components/GridBox/GridBox'\nimport GridScript from './components/GridScript/GridScript'\nclass DemoBox extends Component {\n  render(){\n    return(\n      <div className=\"demo-container-wrapper\">\n        <h1> Grid Display </h1>\n        <div className=\"demo-container\">\n          <GridScript />\n          <GridBox />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DemoBox;\n","import React from 'react';\n\nexport function Footer() {\n  return (\n    <div className=\"footer\" >\n      <p>&copy; 2018 &middot; Huy Phat Vu &middot; All Rights Reserved.</p>\n    </div>\n  );\n}\n\n  export default Footer;\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport AppStyle from './stylesheets/css/application.css';\n// import pug from 'pug';\nimport Header from \"./components/Header/Header\"\nimport DemoBox from \"./components/DemoBox/DemoBox\"\nimport Footer from \"./components/Footer/Footer\"\nimport { HashRouter } from 'react-router-dom'\n\n// import pug from 'pug';\nclass App extends Component {\n\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"App\" class=\"flex\" style = { AppStyle } >\n          <Header />\n          <div className=\"block\">\n              <DemoBox />\n              <DemoBox />\n              <DemoBox />\n          </div>\n          <Footer />\n        </div>\n      </ HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}