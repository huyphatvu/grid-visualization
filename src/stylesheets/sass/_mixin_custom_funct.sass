// file to store customized mixin functions

@mixin keyframes($animation-name)
  @-webkit-keyframes #{$animation-name}
    @content
  @-moz-keyframes #{$animation-name}
    @content
  @-ms-keyframes #{$animation-name}
    @content
  @-o-keyframes #{$animation-name}
    @content
  @keyframes #{$animation-name}
    @content

@mixin transform($transforms)
  -moz-transform: $transforms
  -o-transform: $transforms
  -ms-transform: $transforms
  -webkit-transform: $transforms
  transform: $transforms
@mixin animation($var)
  -webkit-animation: $var
  -moz-animation: $var
  -o-animation: $var
  animation: $var

@mixin box-shadow($var)
  -webkit-box-shadow: $var
  -moz-box-shadow: $var
  box-shadow: $var

@mixin border-radius($var)
  border-radius: $var
  -moz-border-radius: $var
  -webkit-border-radius: $var

@mixin transition($var)
  -webkit-transition: $var
  -o-transition: $var
  -moz-transition: $var
  transition: $var

@mixin appearance($var)
  appearance: $var
  -webkit-appearance: $var
  -moz-appearance: $var




// Internet Explore Fallback
// Extract the first and last color variables for "-ms-filter"
@function gradient--ie($gradient--concat)
  $start_map: ''
  $end_map: ''
  @each $position, $color in $gradient--concat
    @if ( $position == 0%)
      $start_map: ('start': $color)
    @if ( $position == 100%)
      $end_map: ('finish': $color)
  @return map-merge($start_map, $end_map)


// Position :: Gradient Mixin
// Add commas to the end of every property concationation, except the last one.
@function gradient--position($position)
  @if ( $position != 100%)
    @return ","
  @else
    @return ""

// Concat :: Gradient Mixin
// Concatinate the gradient map properties and values into structured CSS
@function gradient--concat($gradient--concat)
  $return-new: ''
  @each $position, $color in $gradient--concat
    $return: $color + ' ' $position + gradient--position($position)
    $return-new: $return-new + '' + $return
  @return unquote($return-new)

//@include gradient(gradient--concat($gradient--concat));
@mixin gradient($gradient-degrees, $gradient--concat)
  $ie_variables: gradient--ie($gradient--concat)
  $start-color: map-get($ie_variables, 'start')
  $finish-color: map-get($ie_variables, 'finish')
  ///* Fallback */
  background-color: mix($start-color, $finish-color)
  background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($start-color), to($finish-color))
  background-image: -webkit-linear-gradient($gradient-degrees, gradient--concat($gradient--concat))
  background-image:    -moz-linear-gradient($gradient-degrees, gradient--concat($gradient--concat))
  background-image:     -ms-linear-gradient($gradient-degrees, gradient--concat($gradient--concat))
  background-image:      -o-linear-gradient($gradient-degrees, gradient--concat($gradient--concat))
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$start-color}', EndColorStr='#{$finish-color}')"
